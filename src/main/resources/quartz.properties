#
#org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreTX
#org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
##
##
###设置为“true”以打开群集功能。如果您有多个Quartz实例使用同一组数据库表，则此属性必须设置为“true”，否则您将遇到破坏
#org.quartz.jobStore.isClustered=true
#org.quartz.jobStore.dataSource = myDS
#org.quartz.dataSource.myDS.driver = com.mysql.cj.jdbc.Driver
#org.quartz.dataSource.myDS.URL = jdbc:mysql://43.139.10.159:3306/test?serverTimezone=GMT%2B8&characterEncoding=UTF8
#org.quartz.dataSource.myDS.user = remote_user
#org.quartz.dataSource.myDS.password = Al;098,./+-3
##
###实例化ThreadPool时，使用的线程类为SimpleThreadPool
##org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool
###threadCount和threadPriority将以setter的形式注入ThreadPool实例
###并发个数  如果你只有几个工作每天触发几次 那么1个线程就可以,如果你有成千上万的工作，每分钟都有很多工作 那么久需要50-100之间.
###只有1到100之间的数字是非常实用的
##org.quartz.threadPool.threadCount=5
###优先级 默认值为5
##org.quartz.threadPool.threadPriority=5
###可以是“true”或“false”，默认为false
##org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread=true
##
###持久化方式，默认存储在内存中，此处使用数据库方式
##
###您需要为JobStore选择一个DriverDelegate才能使用。DriverDelegate负责执行特定数据库可能需要的任何JDBC工作
### StdJDBCDelegate是一个使用“vanilla”JDBC代码（和SQL语句）来执行其工作的委托,用于完全符合JDBC的驱动程序
##
##
##org.quartz.scheduler.instanceId = AUTO
##org.quartz.scheduler.instanceName = MyClusteredScheduler
#
##配置squartz的线程
#org.quartz.threadPool.class: org.quartz.simpl.SimpleThreadPool
#org.quartz.threadPool.threadCount: 6
#org.quartz.threadPool.threadPriority: 5
#
#
#spring.quartz.properties.org.quartz.scheduler.instanceName=LivingOrdering
#
#
#
#
